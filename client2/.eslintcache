[{"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\index.js":"1","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\App.js":"2","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\LandingPage\\LandingPage.js":"3","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\LoginPage\\LoginPage.js":"4","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\RegisterPage\\RegisterPage.js":"5","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_reducers\\index.js":"6","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_reducers\\user_reducer.js":"7","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_actions\\user_action.js":"8","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_actions\\types.js":"9","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\reportWebVitals.js":"10","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\PostPage\\PostPage.js":"11","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\hoc\\auth.js":"12"},{"size":980,"mtime":1611378209526,"results":"13","hashOfConfig":"14"},{"size":851,"mtime":1611891080459,"results":"15","hashOfConfig":"14"},{"size":2224,"mtime":1612793926811,"results":"16","hashOfConfig":"14"},{"size":2025,"mtime":1611138848542,"results":"17","hashOfConfig":"14"},{"size":3420,"mtime":1612719294377,"results":"18","hashOfConfig":"14"},{"size":161,"mtime":1610800250289,"results":"19","hashOfConfig":"14"},{"size":580,"mtime":1611135173259,"results":"20","hashOfConfig":"14"},{"size":765,"mtime":1611136551944,"results":"21","hashOfConfig":"14"},{"size":119,"mtime":1610799027366,"results":"22","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"14"},{"size":3850,"mtime":1612718529251,"results":"24","hashOfConfig":"14"},{"size":1750,"mtime":1611138719863,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"136lack",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\index.js",[],["56","57"],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\App.js",[],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\LoginPage\\LoginPage.js",["58"],"import React, {useState} from 'react'\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {loginUser} from '../../../_actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction LoginPage(props) {\r\n    const dispatch=useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onEmailHandler =(event)=>{\r\n        setEmail(event.currentTarget.value);\r\n    }\r\n\r\n    const onPasswordHandler=(event)=>{\r\n        setPassword(event.currentTarget.value);\r\n    }\r\n\r\n    const onSubmitHandler =(event)=>{\r\n        event.preventDefault(); //refresh방지기능\r\n        let body={\r\n            email: Email,\r\n            password: Password\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n            .then(response=>{\r\n                if(response.payload.loginSuccess){\r\n                    props.history.push('/');\r\n                    alert('로그인 성공');\r\n                }else{\r\n                    alert('error');\r\n                }\r\n            })\r\n\r\n        \r\n    }\r\n    return (\r\n        <div style={{\r\n            display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n             width: '100%', height: '100vh'\r\n        }}>\r\n            <form style={{display: 'flex', flexDirection: 'column'}} \r\n                onSubmit={onSubmitHandler}\r\n            >\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n                <br />\r\n                <button type=\"submit\">로그인</button>\r\n\r\n                <br/>\r\n                <br/>\r\n                <Link to=\"/\">Home</Link>\r\n                <br/>\r\n                <Link to=\"/register\">Register</Link>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_reducers\\index.js",[],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_reducers\\user_reducer.js",["59","60","61","62"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER\r\n} from '../_actions/types'\r\n\r\n\r\nexport default function (state={}, action){ //전 state을 action으로 만들어줌\r\n    switch(action.type){\r\n        case LOGIN_USER:\r\n            return {...state, loginSuccess: action.payload}\r\n            break;\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload}\r\n            break;\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload}\r\n            break;\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\_actions\\types.js",[],["63","64"],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\reportWebVitals.js",[],"C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\component\\views\\PostPage\\PostPage.js",["65","66"],"import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport Axios from 'axios';\r\nimport Dropzone from 'react-dropzone'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector} from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nfunction PostPage(props) {\r\n    const dispatch=useDispatch();\r\n    const [Seed, setSeed] = useState(\"\");\r\n    const [FilePath, setFilePath] = useState(\"\");\r\n    const user=useSelector(state=>state.user); //reduxdevtool로 확인\r\n\r\n    const onSeedHandler=(event)=>{\r\n        setSeed(event.currentTarget.value);\r\n    }\r\n    const onDrop =(files)=>{\r\n        let formData = new FormData;\r\n        const config ={\r\n            header: {'content-type': 'multipart/form-data'}\r\n        }\r\n        formData.append(\"file\", files[0]);\r\n        \r\n        Axios.post('/api/post/uploadfiles', formData, config)\r\n            .then(response=>{\r\n                if(response.data.success){\r\n                    console.log(response.data);\r\n                    \r\n                    setFilePath(response.data.url);\r\n                    \r\n                }else{\r\n                    alert('포스트 업로드를 실패했습니다');\r\n                    console.log(response.data.err);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const onSubmit=(event)=>{\r\n        event.preventDefault();\r\n        const variables={\r\n            writer: user.userData._id, //useSelector로 가져온다 reduxdevtool로 확인\r\n            content:Seed,\r\n            image:FilePath,\r\n        }\r\n        Axios.post('/api/post/uploadPost', variables)\r\n            .then(response=>{\r\n                if(response.data.success){\r\n                    alert('성공적으로 업로드를 했습니다');\r\n                    setTimeout(()=>{\r\n                        props.history.push('/');\r\n                    }, 2000)\r\n                }else{\r\n                    alert('포스트업로드 실패');\r\n                }\r\n            })\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Let's culture your tomato!</h3>\r\n            <br/>\r\n            \r\n            <br/>\r\n            <div>\r\n                <form onSubmit={onSubmit}>\r\n                    <div>\r\n                        <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={10000000}>\r\n                        {({getRootProps, getInputProps})=>(\r\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex',\r\n                        alignItems: 'center', justifyContent: 'center'}}{...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                            \r\n\r\n                        </div>\r\n                        )} \r\n                        </Dropzone>\r\n                    </div>\r\n\r\n                    {FilePath&&\r\n\r\n                        <div>\r\n                            <img src={`http://localhost:5000${FilePath}`} alt=\"thumnail\"></img>\r\n                        </div>\r\n\r\n                    }\r\n\r\n                    \r\n                    \r\n                    <textarea id=\"seed\" name=\"content\" maxLength=\"300\" \r\n                    cols=\"70\" rows=\"10\"\r\n                    style={{\r\n                        borderColor:\"red\", borderWidth:\"thick\", resize:\"none\"\r\n                    }} onChange={onSeedHandler} value={Seed}></textarea>\r\n                    <br />\r\n                    <div style={{marginLeft:\"480px\"}}>\r\n                        <button type=\"submit\" >Seed</button>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <Link to=\"/\">Home</Link>\r\n\r\n \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostPage);\r\n","C:\\Users\\dksdu\\webproject\\tomato-culture\\client\\src\\hoc\\auth.js",["67","68","69"],"import React, {useEffect} from 'react'\r\nimport Axios from 'axios'\r\nimport {useDispatch} from 'react-redux';\r\nimport {auth} from '../_actions/user_action';\r\n\r\n\r\nexport default function (SpecificComponent, option, adminRoute=null){\r\n    //SpecificComponent : 컴포넌트 종류(랜딩,로그인, 레지스터..)\r\n//option: null    =>  아무나 출입이 가능한 페이지\r\n    //true    =>  로그인한 유저만 출입이 가능한 페이지\r\n    //false   =>  로그인한 유저는 출입 불가능한 페이지\r\n    //adminRoute:관리자만 들어가길 원한다면=>true\r\n    function AuthenticationCheck(props){\r\n        const dispatch=useDispatch();\r\n        useEffect(() => {\r\n            dispatch(auth()).then(response=>{\r\n                console.log(response);\r\n                //로그인하지 않은 상태\r\n                if(!response.payload.isAuth){\r\n                    if(option){ //option이 true인 경우 다른 페이지로 보냄(막음)\r\n                        props.history.push('/login');\r\n                    }\r\n                }else{\r\n                    //로그인 한 상태\r\n                    if(adminRoute && !response.payload.isAdmin){//isAdmin이 false인경우\r\n                        //Admin만 들어갈수있는 페이지\r\n                        props.history.push('/');\r\n                    }\r\n                    else{\r\n                        if(option === false){ //로그인한 유저가 출입불가능한 페이지\r\n                            props.history.push('/');\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n           \r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck;\r\n}",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":8,"column":1,"nodeType":"80","endLine":25,"endColumn":2},{"ruleId":"81","severity":1,"message":"82","line":12,"column":13,"nodeType":"83","messageId":"84","endLine":12,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":15,"column":13,"nodeType":"83","messageId":"84","endLine":15,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":18,"column":13,"nodeType":"83","messageId":"84","endLine":18,"endColumn":19},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","replacedBy":"86"},{"ruleId":"74","severity":1,"message":"87","line":14,"column":11,"nodeType":"76","messageId":"77","endLine":14,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":23,"column":24,"nodeType":"90","messageId":"91","endLine":23,"endColumn":36,"fix":"92"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":7,"column":1,"nodeType":"80","endLine":45,"endColumn":2},{"ruleId":"93","severity":1,"message":"94","line":38,"column":12,"nodeType":"95","endLine":38,"endColumn":14,"suggestions":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["97"],["98"],"'dispatch' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"99","text":"100"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["101"],"no-global-assign","no-unsafe-negation",[670,670],"()",{"desc":"102","fix":"103"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"104","text":"105"},[1378,1380],"[dispatch, props.history]"]